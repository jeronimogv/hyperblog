clase de git

Comandos de git

git config -l 	Enlista la configuracion de git

git config --global user.email "jeronimo@hotmail.com
		Modifica el email del usuario a jeronimo@homail.com

git init 	para incializar git dentro de la carpeta donde tenemos nuestro proyecto.
		si existen subcarpetas dentro de de la carpeta princiapal automaticamente
		quedan listas para trabajar con git.

git add 	evia los cambios en los archivos del directorio de trabajo al 
		estado de stagging.

git commit -m	envia lo que esta en stagging a el repositorio local con un mendaje.

git rm -f 	elimina del repositorio local y directorio de trabajo el archivo.
		se va, se pierde, cuidado.

git rm --cached	elimina de stagging el arcivo deseado y solo se tiene en el directorio de
		tranajo y si se hace  un commit este archivo no sera enviado al repositorio
		local.
git reset --soft	borra el historial de los registros de git en el repositorio local pero
		mantiene lo camnio que ya estan en staggig. no altera los archivos del
		directorio de trabajo.

git reset --hard	Elimina todos los registros de git a partir del reset selecionado
		ademas elimina de directorio de trabajo todos los cambios hechos al
		archivo y otros archivos creado a partir de reset selcionado.
		"mucho cuidado"

git reset head	quita todo lo que se tenga en stagging. ( vuelven a untrack)

git log		muestra todos los commit con sus mensajes y registro en base de datos de
		los cambios en el repositorio local.

git show	muestra el ultimo commit en el repositorio local.

git checkout	Nos sirve para cambiarnos entre las diferentes ramas de nuestro proyecto. 
		por ejemplo. "git checkout cabecera" y archivos hasta la seleccion del checkout. Para salir hacemos un git
		checkout master. 

git merge	sirve para fucionar dos ramas. siempre se debe de estar possisionado en la rama 
		principal para invocar el merge.

git branch	Te muestra las ramas de tu proyecto y la rama en que te encuetras. si le agregas un nombre te crea una rama 
		nueva.

git remote origin
		genera un origen remoto con el monbre origin.

ssh-keygen -t rsa -b 4096 "email asociado al usuario de github"
		Genera la llave ssh publica y privada.

git pull 	Jala la informacion del repositorio remote.

git push	envia la informacion de la rama selccionada.

git log --all --graph --decorate --online
		Muestra la historia grafica de los commits.

alias nombre="git log ==all --graph --decorate --online"
		Genera un alias del comando entre comillas.

git tag		Muestra los tags del proyecto

git tag -a v0.1 -m "mensaje como de un commit" 156987
		genera el tag v0.1 en el commit con el hash de referencia 156987

git show-ref --tags
		Muestra la referencia de los tags asociados a los commits

git push origin tags
		Envia los tags a github

git tag -d v0.1
		Elimina el tag v0.1 localmente

git push origin :refs/tags/v0.1
		Elimina el tag localmente y el github.

git show-branch
		Muestra las ramas que existen con su historia

git show-branch --all
		muestra mas informacion de las ramas

gitK		Las ramas de manera visual




		
		





